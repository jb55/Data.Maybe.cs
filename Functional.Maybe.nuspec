<?xml version="1.0"?>
<package >
	<metadata>
		<id>Functional.Maybe</id>
		<version>$version$</version>
		<title>Functional.Maybe â€” Option type for C# with LINQ support and rich fluent syntax for many popular uses</title>
		<authors>Andrey Tsvetkov; original version by William Casarin</authors>
		<owners>Andrey Tsvetkov</owners>
		<licenseUrl>https://raw.githubusercontent.com/AndreyTsvetkov/Functional.Maybe/master/License.txt</licenseUrl>
		<projectUrl>https://github.com/AndreyTsvetkov/Functional.Maybe</projectUrl>
		<iconUrl>http://findicons.com/files/icons/1462/candy_hearts/32/maybe.png</iconUrl>
		<requireLicenseAcceptance>false</requireLicenseAcceptance>
		<summary>Option types for C# with LINQ support and rich fluent syntax for many popular uses</summary>
		<description>
			<![CDATA[
		Option types for C# with LINQ support and rich fluent syntax for many popular uses:

		var maybeOne = "one".ToMaybe();
		var maybeAnother = Maybe<string>.Nothing;

		var maybeBoth = 
			from one in maybeOne
			from another in maybeAnother
			select one + another;

		maybeBoth.Match(
			both =>Console.WriteLine("Result is: {0}", both), 
			@else: () => Console.WriteLine("Result is Nothing, as one of the inputs was Nothing")
		);]]>
		</description>
		<releaseNotes>Added SelectMaybe alias for SelectMany.</releaseNotes>
		<copyright>Copyright 2015</copyright>
		<tags> option, maybe, linq, fluent, functional </tags>
	</metadata>
</package>